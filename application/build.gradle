apply plugin: 'application'

mainClassName = "io.ktor.server.netty.EngineMain"
applicationName = 'tveebot'

repositories {
    maven { url "https://dl.bintray.com/kotlin/exposed" }
    maven { url "https://dl.bintray.com/kotlin/ktor" }
}

dependencies {
    implementation project(':downloader-lib')
    implementation project(':tracker-lib')
    implementation project(':library-lib')
    testCompile project(path: ':common-utils', configuration: 'testOutput')
}

dependencies {
    implementation "org.kodein.di:kodein-di-generic-jvm:$kodeinVersion"
    implementation "com.h2database:h2:$h2Version"
}

dependencies {
    compile "io.ktor:ktor-server-netty:$ktorVersion"
    compile "io.ktor:ktor-gson:$ktorVersion"
}

// Dirty hack to ensure the 'conf' directory is included in the classpath by the start script
// Not using this hack, will result in the classpath to include 'lib/conf' instead of just 'conf'
// Hack from: https://stackoverflow.com/questions/38416562/gradle-build-file-with-conf-folder-with-properties-not-in-jar-but-on-classpath
startScripts {  
    classpath += files('src/dist/XxxAPlaceHolderForAConfxxX')
    doLast {
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile    = file getUnixScript()
        windowsScriptFile.text = windowsScriptFile.text.replace('%APP_HOME%\\lib\\XxxAPlaceHolderForAConfxxX', '%APP_HOME%\\conf')
        unixScriptFile.text  = unixScriptFile.text.replace('$APP_HOME/lib/XxxAPlaceHolderForAConfxxX', '$APP_HOME/conf')
    }
}